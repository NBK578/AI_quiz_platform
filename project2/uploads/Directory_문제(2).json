[
    {
        "page": 1,
        "유형": "객관식",
        "question_data": {
            "question": "다음 중 스크립트 안에서 파일 권한을 변경하는 명령은 무엇인가?",
            "choices": [
                "A. chmod",
                "B. chown",
                "C. fcntl",
                "D. stat"
            ],
            "answer": "A",
            "explanation": "chmod 명령을 사용하여 스크립트에서 파일 권한을 변경할 수 있다. 이 명령의 형식은 'chmod {a,u,g,o} {+-} {r,w,x} filenames'이다."
        }
    },
    {
        "page": 5,
        "유형": "빈칸 채우기",
        "question_data": {
            "question": "유닉스의 사용자 카테고리 중 하나인 '소유자(Owner)'는 일반적으로 ______을 생성한 사용자라고 한다.",
            "answer": "파일",
            "explanation": ""
        }
    },
    {
        "page": 7,
        "유형": "빈칸 채우기",
        "question_data": {
            "question": "'r', 'w', 'x'는 각각 읽기 권한, 쓰기 권한, ______ 권한을 의미한다.",
            "answer": "실행",
            "explanation": ""
        }
    },
    {
        "page": null,
        "유형": "OX문제",
        "question_data": {
            "question": "'chmod'를 사용해 파일 사용 권한을 설정할 수 있다.",
            "choices": [
                "O",
                "X"
            ],
            "answer": "O",
            "explanation": "PDF에 따르면, chmod는 파일 사용 권한을 설정하기 위한 명령이다."
        }
    },
    {
        "page": null,
        "유형": "OX문제",
        "question_data": {
            "question": "'umask'는 파일 생성 시 수행중인 유저의 파일 사용 권한을 결정한다.",
            "choices": [
                "O",
                "X"
            ],
            "answer": "O",
            "explanation": "문서에 따르면, 'umask'는 파일 생성 시 유저의 파일 권한을 설정하며 이는 파일의 기본 권한을 결정한다."
        }
    },
    {
        "page": "14",
        "유형": "주관식",
        "question_data": {
            "question": "파일의 사용 권한에 있어서 'r', 'w', 'x'가 각각 의미하는 것은 무엇인가요?",
            "answer": "r은 read(읽기) 속성, w는 write(쓰기) 속성, x는 excute(실행) 속성",
            "explanation": "파일의 사용 권한을 설정할 때, 'r'는 읽기(read) 권한, 'w'는 쓰기(write) 권한, 'x'는 실행(excute) 권한을 의미합니다."
        }
    },
    {
        "page": "5",
        "유형": "주관식",
        "question_data": {
            "question": "유닉스의 사용자 카테고리는 크게 어떤 것들이 있나요?",
            "answer": "소유자(Owner), 그룹(Group), 기타사용자(Others)",
            "explanation": "유닉스에서 파일이나 디렉토리의 사용 권한은 소유자, 그룹 및 기타사용자로 나누어 설정됩니다."
        }
    },
    {
        "page": null,
        "유형": "서술형",
        "question_data": {
            "question": "PDF에서 소개한 유닉스의 파일 권한에 대해서 설명해주세요.",
            "answer": "유닉스 시스템에서의 파일 권한은 read(r), write(w), execute(x)의 세 가지 속성으로 구성되며 이들은 사용자(Owner), 그룹(Group), 기타사용자(Others)를 대상으로 다르게 설정될 수 있다. 사용자는 일반적으로 파일을 생성한 사용자를 의미하며, 그룹은 파일과 동일한 그룹에 속해있는 사용자들을 의미한다. 기타사용자는 소유자나 그룹카테고리에 속하지 않은 모든 사용자들을 의미한다. 또한, 파일 권한 설정은 chmod 명령어를 통해 이루어지며, 형식으로는 chmod {a,u,g,o} {+-} {r,w,x} filenames를 사용한다.",
            "explanation": "유닉스 시스템에서 파일 권한은 파일에 접근하고 조작할 수 있는 범위를 제한하기 위한 것이다. 이 권한을 설정함으로써 누가 파일을 읽고, 쓰고, 실행할 수 있는지를 제어할 수 있다."
        }
    },
    {
        "page": null,
        "유형": "서술형",
        "question_data": {
            "question": "PDF에서 설명한 다중사용자 환경에서는 파일을 어떻게 공유하면 좋을지 설명해주세요.",
            "answer": "다중사용자 환경에서는 파일 권한을 통해 파일의 공유를 관리할 수 있다. 예를 들어, user2와 user3이 같은 부서에 속한 경우 해당 부서의 문서를 공유하기 위해서는 해당 파일의 그룹을 이들이 속한 그룹으로 설정하면 된다. 반면, user1은 다른 부서에 속해 있으므로 이 사용자가 user2와 user3의 문서에 접근하지 못하도록 하려면 user1이 속한 그룹이 아닌 다른 그룹으로 파일 권한을 설정하면 된다. 이렇게 파일 권한을 통해 누가 특정 파일에 접근할 수 있는지 제한하고, 필요한 경우 특정 그룹에게만 파일을 공유할 수 있다.",
            "explanation": "다중사용자 환경에서는 사용자나 그룹 별로 파일 권한을 설정함으로써 다양한 사용자의 파일 접근을 관리할 수 있다."
        }
    }
]