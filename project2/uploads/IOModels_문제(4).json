[
    {
        "page": null,
        "유형": "객관식",
        "question_data": {
            "question": "입력 동작에서 데이터가 준비될 때까지 기다리는 단계와 준비된 데이터를 커널에서 사용자 프로세스로 복사하는 두 단계는 어떤 작업에 관련되어 있나요?",
            "choices": [
                "A. 네트워크 소켓 작업",
                "B. 비동기 I/O 작업",
                "C. 신호 기반 I/O 작업",
                "D. I/O 다중화 작업"
            ],
            "answer": "A",
            "explanation": "입력 동작에서 패킷이 네트워크로부터 도착하여 커널 버퍼로 복사되고, 다시 커널 버퍼로부터 응용 프로그램의 버퍼로 복사되는 과정은 네트워크 소켓 작업에서 발생합니다."
        }
    },
    {
        "page": null,
        "유형": "객관식",
        "question_data": {
            "question": "다음 중 비동기 I/O 모델에서 수행되지 않는 작업은 무엇인가요?",
            "choices": [
                "A. 시스템 요청이 완료될 때까지 대기",
                "B. 데이터의 무결성 검사",
                "C. 다른 요청 시작 및 추적",
                "D. 여러 소켓 연결 대기"
            ],
            "answer": "A",
            "explanation": "비동기 I/O 모델에서는 시스템 요청이 완료되는 동안 다른 작업을 계속 수행할 수 있습니다. 따라서 '시스템 요청이 완료될 때까지 대기'는 비동기 모델에서 수행되지 않는 작업입니다."
        }
    },
    {
        "page": 2,
        "유형": "빈칸 채우기",
        "question_data": {
            "question": "I/O 작업에는 몇 단계가 존재하나요?",
            "answer": "2 단계",
            "explanation": "I/O 작업에는 데이터가 준비될 때까지 기다리는 단계와 준비된 데이터를 커널에서 사용자 프로세스로 복사하는 단계의 2 단계가 존재합니다."
        }
    },
    {
        "page": 10,
        "유형": "빈칸 채우기",
        "question_data": {
            "question": "블로킹 모델에서, 어떤 상태에서 프로세스가 블록됩니까?",
            "answer": "데이터가 애플리케이션 버퍼로 복사되는 동안",
            "explanation": "블로킹 모델에서는 데이터가 커널에서 애플리케이션 버퍼로 복사되는 동안 프로세스가 블록됩니다."
        }
    },
    {
        "page": 1,
        "유형": "OX문제",
        "question_data": {
            "question": "입력 동작에는 데이터가 준비될 때까지 기다리는 단계와 준비된 데이터를 커널에서 사용자 프로세스로 복사하는 2가지 단계가 존재한다.",
            "choices": [
                "O",
                "X"
            ],
            "answer": "O",
            "explanation": "PDF 내용에 따르면, 입력 동작에는 '데이터가 준비될 때까지 기다리는 단계'와 '준비된 데이터를 커널에서 사용자 프로세스로 복사하는 단계'의 2단계가 존재한다."
        }
    },
    {
        "page": 1,
        "유형": "OX문제",
        "question_data": {
            "question": "I/O 모델에는 Blocking I/O, Non-blocking I/O, I/O multiplexing, Signal Driven I/O Model, Asynchronous I/O의 5가지 유형이 있다.",
            "choices": [
                "O",
                "X"
            ],
            "answer": "O",
            "explanation": "PDF 내용에 따르면, I/O 모델에는 Blocking I/O, Non-blocking I/O, I/O multiplexing, Signal Driven I/O Model, Asynchronous I/O의 5가지 유형이 있다."
        }
    },
    {
        "page": 4,
        "유형": "주관식",
        "question_data": {
            "question": "I/O 작업에는 어떤 두 단계가 존재하는가?",
            "answer": "데이터가 준비될 때까지 기다리는 단계와 준비된 데이터를 커널에서 사용자 프로세스로 복사하는 단계",
            "explanation": ""
        }
    },
    {
        "page": 5,
        "유형": "주관식",
        "question_data": {
            "question": "네트워크 소켓의 경우, 어떤 두 단계를 거치게 되는가?",
            "answer": "패킷이 네트워크로부터 도착하여 커널 버퍼로 복사되고, 커널 버퍼로부터 응용 프로그램의 버퍼로 복사된다",
            "explanation": ""
        }
    },
    {
        "page": 1,
        "유형": "서술형",
        "question_data": {
            "question": "PDF에서 소개된 다섯 가지 I/O 모델에 대해 비교 설명하시오.",
            "answer": "먼저 'Blocking I/O 모델'에는 데이터그램이 준비될 때까지 프로세스가 차단되며, 데이터그램이 준비되면 커널에서 사용자에게 데이터를 복사하고 프로세스가 데이터그램을 처리합니다. 'Non-blocking I/O 모델' 에서는 데이터그램이 준비될 때까지 프로세스가 반복적으로 recvfrom을 호출하며, 데이터그램이 준비되면 데이터가 커널에서 사용자로 복사되고 프로세스가 데이터그램을 처리합니다. 'I/O Multiplexing 모델'에서는 프로세스가 여러 소켓 중 하나가 읽을 수 있게 될 때까지 select의 호출에서 차단되며, 데이터그램이 준비되면 데이터가 커널에서 사용자로 복사됩니다. 'Signal-driven I/O Model'에서는 시그널 핸들러를 설정하고, 데이터그램이 준비되면 데이터가 커널에서 사용자로 복사되며, SIGIO 시그널이 전달됩니다. 마지막으로 'Asynchronous I/O 모델'에서는 read가 완료될때까지 차단되며, read가 완료되면 notification이 전달되고 프로세스가 데이터그램을 처리합니다.",
            "explanation": "I/O 모델은 입력과 출력 동작을 처리하는 방식을 결정하며, 시스템의 동작 방식과 성능을 크게 영향을 줍니다. 각 모델은 특정한 상황에서 최적의 성능을 발휘하며, 복잡도와 리소스 사용, 응답 시간 등 다양한 요소를 고려해 적절한 모델을 선택해야합니다."
        }
    }
]