[
    {
        "page": null,
        "유형": "객관식",
        "question_data": {
            "question": "Effective uid가 아닌 real uid에 준하여 process가 file에 접근할 수 있는지를 알려주는 함수는?",
            "choices": [
                "A. chmod",
                "B. access",
                "C. link",
                "D. umask"
            ],
            "answer": "B",
            "explanation": "access 함수는 Effective uid가 아닌 real uid에 준하여 process가 file에 접근할 수 있는지를 알려준다."
        }
    },
    {
        "page": 1,
        "유형": "빈칸 채우기",
        "question_data": {
            "question": "파일 허가를 검사할 때, 실패의 경우 반환 값은 ______이다.",
            "choices": [
                "A. 0",
                "B. -1",
                "C. 1",
                "D. 2"
            ],
            "answer": "B",
            "explanation": "문맥 내용에 따르면, 허가에 실패할 경우 반환 값은 '-1'입니다."
        }
    },
    {
        "page": 1,
        "유형": "빈칸 채우기",
        "question_data": {
            "question": "'umask'로 파일을 생성하려는데, 화일 생성 마스크 설정 중 오류가 발생하면 ______ 값을 반환한다.",
            "choices": [
                "A. 0",
                "B. 1",
                "C. -1",
                "D. 2"
            ],
            "answer": "C",
            "explanation": "문맥 내용에 따르면, 'umask'에서 오류 발생 시 반환 값은 '-1'입니다."
        }
    },
    {
        "page": 1,
        "유형": "OX문제",
        "question_data": {
            "question": "umask를 0으로 설정하면 파일 생성 마스크가 설정되는가?",
            "choices": [
                "O",
                "X"
            ],
            "answer": "O",
            "explanation": "umask를 0으로 설정하면 파일 생성 마스크가 설정됩니다."
        }
    },
    {
        "page": 1,
        "유형": "OX문제",
        "question_data": {
            "question": "파일에 대한 읽기, 쓰기, 실행 권한은 다중 사용자 시스템에서 가장 기본적인 보안 기능인가?",
            "choices": [
                "O",
                "X"
            ],
            "answer": "O",
            "explanation": "읽기, 쓰기, 실행 권한은 다중 사용자 시스템에서 가장 기본적인 보안 기능입니다."
        }
    },
    {
        "page": 1,
        "유형": "주관식",
        "question_data": {
            "question": "파일의 소유권을 가지는 uid를 무엇이라고 하는가?",
            "answer": "effective user-id (euid)",
            "explanation": "Effective user-id (euid)는 실제 파일의 소유권을 가진 uid를 의미합니다."
        }
    },
    {
        "page": 1,
        "유형": "주관식",
        "question_data": {
            "question": "filedes=open(pathname, O_WRONLY｜O_CREAT｜O_EXCL, mode) 이 코드의 작동 방식은 어떻게 되는가?",
            "answer": "파일을 생성하고 쓰기 전용으로 열음",
            "explanation": "해당 코드는 pathname이 가리키는 파일을 쓰기 전용으로 열고, 만약 파일이 존재하지 않으면 새로 생성합니다. 만약 파일이 이미 존재하면 오류를 반환합니다."
        }
    },
    {
        "page": 4,
        "유형": "서술형",
        "question_data": {
            "question": "euid와 ruid, egid의 차이를 설명해 주세요.",
            "answer": "effective user-id (euid, 유효사용자식별번호)는 실제 소유권을 가지는 uid입니다. 반면에 real user-id (ruid, 진짜사용자식별번호)는 프로세스를 실행시킨 uid를 가리킵니다. 이와 비슷하게 egid는 effective group id를 의미합니다.",
            "explanation": null
        }
    },
    {
        "page": 9,
        "유형": "서술형",
        "question_data": {
            "question": "link와 unlink 시스템 호출의 역할과  이를 사용하는 파일 이동 방법에 대해 설명해주세요.",
            "answer": "link 시스템 호출은 실제로 파일을 이동하거나 이름을 변경하는 것이 아니라 새로운 링크를 만들어 파일에 대한 다른 경로를 제공합니다. 그에 반해 unlink 시스템 호출은 파일의 하나의 링크를 제거합니다. 이 두 시스템 호출을 사용하면 파일을 '이동'할 수 있습니다. 먼저 원본 파일에 대한 새 링크를 생성한 후 원본 링크를 제거함으로써 파일을 '이동'하는 것처럼 보이게 할 수 있습니다.",
            "explanation": null
        }
    }
]